// <auto-generated />
using System;
using Lab3.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab3.DAL.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20250424095700_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Lab3.DAL.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Discount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b9ecc60-7dc7-43d4-aff0-97f8e42fe0d9"),
                            Description = "Bluetooth noise-cancelling over-ear headphones.",
                            Discount = 10,
                            InStock = 50,
                            Name = "Wireless Headphones",
                            Price = 149.99m
                        },
                        new
                        {
                            Id = new Guid("1808bd06-1932-47e4-bdfa-01a659b89f6e"),
                            Description = "High-precision RGB gaming mouse with adjustable DPI.",
                            Discount = 15,
                            InStock = 120,
                            Name = "Gaming Mouse",
                            Price = 59.99m
                        },
                        new
                        {
                            Id = new Guid("f201b8c9-516c-4c1b-a0a2-a83060ada90f"),
                            Description = "Fitness tracking smartwatch with heart-rate monitoring.",
                            Discount = 5,
                            InStock = 75,
                            Name = "Smartwatch",
                            Price = 199.50m
                        },
                        new
                        {
                            Id = new Guid("3c8a4d9d-8997-425a-8205-d46c33829b70"),
                            Description = "10000mAh power bank with fast charging capability.",
                            Discount = 20,
                            InStock = 200,
                            Name = "Portable Charger",
                            Price = 29.95m
                        },
                        new
                        {
                            Id = new Guid("11edb517-bca0-4e87-b8a5-c685a4eade4f"),
                            Description = "Dimmable LED lamp with touch controls and USB charging port.",
                            Discount = 12,
                            InStock = 90,
                            Name = "LED Desk Lamp",
                            Price = 39.99m
                        });
                });

            modelBuilder.Entity("Lab3.DAL.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eb7c5fe5-8a71-471f-99c7-4c3935b7594f"),
                            Name = "TechSupply Co."
                        },
                        new
                        {
                            Id = new Guid("2ff59740-8b39-42bc-8bc7-f243bcb48442"),
                            Name = "GadgetWorld Inc."
                        });
                });

            modelBuilder.Entity("ProductSupplier", b =>
                {
                    b.Property<Guid>("ProductsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SuppliersId")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductsId", "SuppliersId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("ProductSuppliers", (string)null);

                    b.HasData(
                        new
                        {
                            ProductsId = new Guid("1b9ecc60-7dc7-43d4-aff0-97f8e42fe0d9"),
                            SuppliersId = new Guid("eb7c5fe5-8a71-471f-99c7-4c3935b7594f")
                        },
                        new
                        {
                            ProductsId = new Guid("1808bd06-1932-47e4-bdfa-01a659b89f6e"),
                            SuppliersId = new Guid("eb7c5fe5-8a71-471f-99c7-4c3935b7594f")
                        },
                        new
                        {
                            ProductsId = new Guid("3c8a4d9d-8997-425a-8205-d46c33829b70"),
                            SuppliersId = new Guid("eb7c5fe5-8a71-471f-99c7-4c3935b7594f")
                        },
                        new
                        {
                            ProductsId = new Guid("11edb517-bca0-4e87-b8a5-c685a4eade4f"),
                            SuppliersId = new Guid("eb7c5fe5-8a71-471f-99c7-4c3935b7594f")
                        },
                        new
                        {
                            ProductsId = new Guid("1b9ecc60-7dc7-43d4-aff0-97f8e42fe0d9"),
                            SuppliersId = new Guid("2ff59740-8b39-42bc-8bc7-f243bcb48442")
                        },
                        new
                        {
                            ProductsId = new Guid("1808bd06-1932-47e4-bdfa-01a659b89f6e"),
                            SuppliersId = new Guid("2ff59740-8b39-42bc-8bc7-f243bcb48442")
                        },
                        new
                        {
                            ProductsId = new Guid("f201b8c9-516c-4c1b-a0a2-a83060ada90f"),
                            SuppliersId = new Guid("2ff59740-8b39-42bc-8bc7-f243bcb48442")
                        });
                });

            modelBuilder.Entity("ProductSupplier", b =>
                {
                    b.HasOne("Lab3.DAL.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab3.DAL.Entities.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
